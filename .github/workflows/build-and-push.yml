name: Build, Push and Deploy

on:
  push:
    branches: [ prod ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and push todo-api
        uses: docker/build-push-action@v4
        with:
          context: ./todo-api
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/todo-api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/todo-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push todo-service
        uses: docker/build-push-action@v4
        with:
          context: ./todo-service
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/todo-service:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/todo-service:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Copy k8s files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "k8s/*"
          target: "/home/${{ secrets.SERVER_USER }}/todo-app"

      - name: Deploy to k3s
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            kubectl apply -f /home/${{ secrets.SERVER_USER }}/todo-app/k8s/
            kubectl rollout restart deployment/todo-api -n todo-app
            kubectl rollout restart deployment/todo-service -n todo-app
            kubectl rollout status deployment/todo-api -n todo-app
            kubectl rollout status deployment/todo-service -n todo-app